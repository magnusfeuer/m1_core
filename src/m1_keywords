struct keyword { char* name; int token; };
%% 
nil, m1::m1Parser::token::M1NIL
this, m1::m1Parser::token::M1THIS 
true, m1::m1Parser::token::M1TRUE 
false, m1::m1Parser::token::M1FALSE
type, m1::m1Parser::token::TYPE 
typedef, m1::m1Parser::token::TYPEDEF 
library, m1::m1Parser::token::LIBRARY 
application, m1::m1Parser::token::APPLICATION 
interface, m1::m1Parser::token::INTERFACE 
event, m1::m1Parser::token::EVENT 
input, m1::m1Parser::token::INPUT 
output, m1::m1Parser::token::OUTPUT 
queue, m1::m1Parser::token::QUEUE 
public, m1::m1Parser::token::PUBLIC 
private, m1::m1Parser::token::PRIVATE 
protected, m1::m1Parser::token::PROTECTED 
persistent, m1::m1Parser::token::PERSISTENT 
char, m1::m1Parser::token::CHAR 
byte, m1::m1Parser::token::BYTE 
int, m1::m1Parser::token::INT 
signed, m1::m1Parser::token::SIGNED 
unsigned, m1::m1Parser::token::UNSIGNED 
float, m1::m1Parser::token::FLOAT 
bool, m1::m1Parser::token::BOOL 
string, m1::m1Parser::token::STRING
const, m1::m1Parser::token::CONST
enum, m1::m1Parser::token::ENUM 
time, m1::m1Parser::token::TIME 
when, m1::m1Parser::token::WHEN 
script, m1::m1Parser::token::SCRIPT
step, m1::m1Parser::token::STEP
case, m1::m1Parser::token::CASE
default, m1::m1Parser::token::DEFAULT
if, m1::m1Parser::token::IF
else, m1::m1Parser::token::ELSE
switch, m1::m1Parser::token::SWITCH
foreach, m1::m1Parser::token::FOREACH
in, m1::m1Parser::token::IN
continue, m1::m1Parser::token::CONTINUE
break, m1::m1Parser::token::BREAK
return, m1::m1Parser::token::RETURN
