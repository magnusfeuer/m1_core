
DRM + SIGNING in M1

0. Magden has a master key pair generated ONCE (RSA 1024) at
   some time  (like tomorrow)

   	  magden.pub
	  magden.key  (never send this in email ;-)

1. Each device has a keypair generated by keytool (RSA 1024)
     
          device.pub
     	  device.key

2. The device.key is store in a database together with a
   uniq serial number and the disc on module serial number
   And when customer register the product the customer is
   This information is tied to the customer.

3. The device.pub (Key-Public-Key) is decode into binary form and
   is then picked to N pieces (say N=16 pices). Then the core code
   is prepared for N places (slot[1..N1]) where the pices are stored.
   A random P permutaion vector of 0..N-1 is generated and is used as an
   index vector between pieces and slots.

   The m1e binary is the patched with the pieces stored in the
   location dictated by P.
   
   The magden.key is used to encrypt the permutation vector P of
   0..15 which is XOR'ed with the disc on module serial number.
   call it P'. The P' is also patched in to the m1e binary.
   
4. The magden.pub is signed with the device.key and is then stored in 
   the key storage area of the device file system.

KEY LOADING PROCESS:

1. The magden.pub is loaded from file system.

2. The slots are read and stored in a vector V.

3. The magden.pub is used to decrypt the the P' vector to get
   the (P xor DISC-SERIAL) code.

4. The (P xor DISC-SERIAL) code is xor'ed with the DISK serial number to
   get the P vector.

5. The slots are descrambled by using the P vector.

6. An internal decice.pub is reconstructed in memory.

7. The device.pub key is used to check the signature of the magden.pub key

8. Now other keys can be loaded into memory.

9. Content can now be verified and decrypted.



----
Create out directory.

make SKINS=common/roll_demo ENC=1  #ENC copies m1 files instead of symlinking them.
